name: Release
on:
    push:
        tags:
            - 'v*'
    workflow_dispatch:

jobs:
    release:
        permissions:
            contents: write
        strategy:
            fail-fast: false
            matrix:
                include:
                    - os: ubuntu-latest
                      target: x86_64-unknown-linux-gnu
                    - os: windows-latest
                      target: x86_64-pc-windows-msvc
                    - os: windows-latest
                      target: i686-pc-windows-msvc
                    - os: macos-latest
                      target: x86_64-apple-darwin
                    - os: macos-latest
                      target: aarch64-apple-darwin
        runs-on: ${{ matrix.os }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Install desktop Linux dependencies
              if: runner.os == 'Linux' && (matrix.target == 'x86_64-unknown-linux-gnu' || matrix.target == 'aarch64-unknown-linux-gnu')
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libayatana-appindicator3-dev librsvg2-dev
                  if [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
                    sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
                  fi
              shell: bash

            - name: Setup Android NDK
              if: matrix.target == 'aarch64-linux-android'
              uses: nttld/setup-ndk@v1
              with:
                ndk-version: r25c
                add-to-path: true

            - name: Set Android NDK environment variables for Cargo
              if: matrix.target == 'aarch64-linux-android'
              run: |
                echo "Setting Android NDK environment variables..."
                echo "NDK_TOOLCHAIN_BIN=${ANDROID_NDK_LATEST_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin" >> $GITHUB_ENV
                # The API level (e.g., 21) in the linker name should match your app's minSdkVersion
                echo "CARGO_TARGET_AARCH64_LINUX_ANDROID_LINKER=${ANDROID_NDK_LATEST_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang" >> $GITHUB_ENV
                echo "CARGO_TARGET_AARCH64_LINUX_ANDROID_AR=${ANDROID_NDK_LATEST_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar" >> $GITHUB_ENV
                echo "PATH=${ANDROID_NDK_LATEST_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin:${PATH}" >> $GITHUB_ENV
                echo "Android NDK setup complete. Linker: ${CARGO_TARGET_AARCH64_LINUX_ANDROID_LINKER}"
              shell: bash

            - name: Rust setup
              uses: dtolnay/rust-toolchain@stable
              with:
                toolchain: stable
                targets: ${{ matrix.target }} # Ensure Rust toolchain has the target

            - name: Rust cache
              uses: swatinem/rust-cache@v2
              with:
                  workspaces: './src-tauri -> target'

            - name: Sync node version and setup cache
              uses: actions/setup-node@v4
              with:
                  node-version: 20

            - name: Install PNPM
              run: npm i -g pnpm

            - name: Install frontend dependencies
              # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
              run: pnpm install # Change this to npm, yarn or pnpm.

            - name: Build the app
              uses: tauri-apps/tauri-action@v0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  # For Android, TAURI_ANDROID_NDK_PATH might be needed if not picked up automatically
                  # TAURI_ANDROID_NDK_PATH: ${{ env.ANDROID_NDK_LATEST_HOME }} # Potentially needed for tauri-action
              with:
                  args: --target ${{ matrix.target }}
                  tagName: ${{ github.ref_name }} # This only works if your workflow triggers on new tags.
                  releaseName: 'App Name v__VERSION__' # tauri-action replaces \_\_VERSION\_\_ with the app version.
                  releaseBody: 'See the assets to download and install this version.'
                  releaseDraft: true
                  prerelease: false
